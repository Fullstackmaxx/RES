<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real Estate Investment Analyzer</title>
    <style>
        /* Modern CSS Variables for Theme Management */
        :root {
            --primary-color: #2563eb;
            --secondary-color: #3b82f6;
            --accent-color: #06b6d4;
            --success-color: #10b981;
            --warning-color: #f59e0b;
            --error-color: #ef4444;
            --bg-primary: #ffffff;
            --bg-secondary: #f8fafc;
            --bg-tertiary: #f1f5f9;
            --text-primary: #1e293b;
            --text-secondary: #64748b;
            --text-tertiary: #94a3b8;
            --border-color: #e2e8f0;
            --shadow-light: 0 1px 3px rgba(0, 0, 0, 0.1);
            --shadow-medium: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            --shadow-heavy: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            --border-radius: 8px;
            --transition: all 0.2s ease;
        }

        [data-theme="dark"] {
            --bg-primary: #0f172a;
            --bg-secondary: #1e293b;
            --bg-tertiary: #334155;
            --text-primary: #f8fafc;
            --text-secondary: #cbd5e1;
            --text-tertiary: #94a3b8;
            --border-color: #475569;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background-color: var(--bg-primary);
            color: var(--text-primary);
            line-height: 1.6;
            transition: var(--transition);
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Header */
        .header {
            background: var(--bg-primary);
            border-bottom: 1px solid var(--border-color);
            padding: 1rem 0;
            position: sticky;
            top: 0;
            z-index: 1000;
            backdrop-filter: blur(10px);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary-color);
            text-decoration: none;
        }

        .header-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .theme-toggle {
            background: none;
            border: 1px solid var(--border-color);
            color: var(--text-primary);
            padding: 0.5rem;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
        }

        .theme-toggle:hover {
            background: var(--bg-secondary);
        }

        /* Main Layout */
        .main-layout {
            display: grid;
            grid-template-columns: 320px 1fr;
            gap: 2rem;
            padding: 2rem 0;
            min-height: calc(100vh - 80px);
        }

        .sidebar {
            background: var(--bg-secondary);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            height: fit-content;
            position: sticky;
            top: 100px;
        }

        .main-content {
            background: var(--bg-primary);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            min-height: 600px;
        }

        /* File Upload Section */
        .upload-section {
            background: var(--bg-secondary);
            border: 2px dashed var(--border-color);
            border-radius: var(--border-radius);
            padding: 2rem;
            text-align: center;
            margin-bottom: 2rem;
            transition: var(--transition);
        }

        .upload-section:hover {
            border-color: var(--primary-color);
        }

        .upload-section.dragover {
            border-color: var(--primary-color);
            background: var(--bg-tertiary);
        }

        .file-input {
            display: none;
        }

        .upload-button {
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: var(--border-radius);
            font-size: 1rem;
            cursor: pointer;
            transition: var(--transition);
        }

        .upload-button:hover {
            background: var(--secondary-color);
            transform: translateY(-2px);
        }

        /* Filters */
        .filters-section {
            margin-bottom: 2rem;
        }

        .filters-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin-bottom: 1rem;
            color: var(--text-primary);
        }

        .filter-group {
            margin-bottom: 1.5rem;
        }

        .filter-label {
            display: block;
            font-size: 0.9rem;
            font-weight: 500;
            margin-bottom: 0.5rem;
            color: var(--text-secondary);
        }

        .filter-input {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            background: var(--bg-primary);
            color: var(--text-primary);
            transition: var(--transition);
        }

        .filter-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(37, 99, 235, 0.1);
        }

        .filter-select {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            background: var(--bg-primary);
            color: var(--text-primary);
            cursor: pointer;
        }

        .price-range {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }

        .price-input {
            flex: 1;
        }

        /* Property Grid */
        .properties-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .properties-count {
            font-size: 0.9rem;
            color: var(--text-secondary);
        }

        .sort-controls {
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .sort-select {
            padding: 0.5rem;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            background: var(--bg-primary);
            color: var(--text-primary);
        }

        .view-toggle {
            display: flex;
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            overflow: hidden;
        }

        .view-button {
            background: var(--bg-primary);
            border: none;
            padding: 0.5rem 1rem;
            cursor: pointer;
            transition: var(--transition);
            color: var(--text-primary);
        }

        .view-button.active {
            background: var(--primary-color);
            color: white;
        }

        .properties-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .property-card {
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: var(--border-radius);
            padding: 1.5rem;
            transition: var(--transition);
            cursor: pointer;
        }

        .property-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-heavy);
        }

        .property-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1rem;
        }

        .property-price {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--primary-color);
        }

        .bookmark-btn {
            background: none;
            border: 1px solid var(--border-color);
            color: var(--text-secondary);
            padding: 0.5rem;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
        }

        .bookmark-btn:hover {
            color: var(--warning-color);
            border-color: var(--warning-color);
        }

        .bookmark-btn.active {
            color: var(--warning-color);
            border-color: var(--warning-color);
            background: rgba(245, 158, 11, 0.1);
        }

        .property-address {
            font-size: 0.9rem;
            color: var(--text-secondary);
            margin-bottom: 1rem;
        }

        .property-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0.75rem;
            margin-bottom: 1rem;
        }

        .property-detail {
            font-size: 0.85rem;
            color: var(--text-secondary);
        }

        .property-metrics {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 0.75rem;
            margin-top: 1rem;
        }

        .metric {
            text-align: center;
            padding: 0.5rem;
            background: var(--bg-primary);
            border-radius: var(--border-radius);
        }

        .metric-value {
            font-size: 0.9rem;
            font-weight: 600;
            color: var(--success-color);
        }

        .metric-label {
            font-size: 0.7rem;
            color: var(--text-tertiary);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        /* Properties Table */
        .properties-table {
            width: 100%;
            border-collapse: collapse;
            background: var(--bg-primary);
            border-radius: var(--border-radius);
            overflow: hidden;
            box-shadow: var(--shadow-light);
        }

        .properties-table th,
        .properties-table td {
            padding: 1rem;
            text-align: left;
            border-bottom: 1px solid var(--border-color);
        }

        .properties-table th {
            background: var(--bg-secondary);
            font-weight: 600;
            color: var(--text-primary);
            cursor: pointer;
            transition: var(--transition);
        }

        .properties-table th:hover {
            background: var(--bg-tertiary);
        }

        .properties-table tr:hover {
            background: var(--bg-secondary);
        }

        /* Comparison Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 2000;
        }

        .modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: var(--bg-primary);
            border-radius: var(--border-radius);
            padding: 2rem;
            max-width: 90vw;
            max-height: 90vh;
            overflow-y: auto;
            position: relative;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--text-primary);
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: var(--text-secondary);
            padding: 0.5rem;
        }

        .comparison-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
        }

        .comparison-card {
            background: var(--bg-secondary);
            border-radius: var(--border-radius);
            padding: 1.5rem;
        }

        /* Loading and Error States */
        .loading {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 3rem;
            color: var(--text-secondary);
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid var(--border-color);
            border-top: 4px solid var(--primary-color);
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .error-message {
            background: var(--error-color);
            color: white;
            padding: 1rem;
            border-radius: var(--border-radius);
            margin-bottom: 1rem;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .main-layout {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .sidebar {
                position: static;
                order: 2;
            }

            .properties-grid {
                grid-template-columns: 1fr;
            }

            .header-content {
                flex-direction: column;
                gap: 1rem;
            }

            .sort-controls {
                flex-direction: column;
                gap: 0.5rem;
            }
        }

        /* Utility Classes */
        .hidden {
            display: none;
        }

        .text-center {
            text-align: center;
        }

        .btn-primary {
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: var(--border-radius);
            font-size: 1rem;
            cursor: pointer;
            transition: var(--transition);
        }

        .btn-primary:hover {
            background: var(--secondary-color);
        }

        .btn-secondary {
            background: var(--bg-secondary);
            color: var(--text-primary);
            border: 1px solid var(--border-color);
            padding: 0.75rem 1.5rem;
            border-radius: var(--border-radius);
            font-size: 1rem;
            cursor: pointer;
            transition: var(--transition);
        }

        .btn-secondary:hover {
            background: var(--bg-tertiary);
        }

        .export-section {
            margin-top: 2rem;
            padding: 1rem;
            background: var(--bg-secondary);
            border-radius: var(--border-radius);
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        .comparison-toggle {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            background: var(--primary-color);
            color: white;
            border: none;
            padding: 1rem;
            border-radius: 50%;
            cursor: pointer;
            transition: var(--transition);
            z-index: 1000;
            box-shadow: var(--shadow-heavy);
        }

        .comparison-toggle:hover {
            transform: scale(1.1);
        }

        .comparison-toggle.hidden {
            display: none;
        }

        .comparison-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background: var(--error-color);
            color: white;
            border-radius: 50%;
            width: 20px;
            height: 20px;
            font-size: 0.7rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    </style>
</head>
<body>
    <header class="header">
        <div class="container">
            <div class="header-content">
                <a href="#" class="logo">🏠 Real Estate Analyzer</a>
                <div class="header-actions">
                    <button class="theme-toggle" onclick="toggleTheme()">🌙</button>
                    <button class="btn-primary" onclick="showBookmarks()">📋 Bookmarks</button>
                </div>
            </div>
        </div>
    </header>

    <div class="container">
        <div class="main-layout">
            <!-- Sidebar -->
            <aside class="sidebar">
                <!-- File Upload Section -->
                <div class="upload-section" id="uploadSection">
                    <h3>Upload Property Data</h3>
                    <p>Drag & drop your CSV file or click to browse</p>
                    <input type="file" id="fileInput" class="file-input" accept=".csv" onchange="handleFileUpload(event)">
                    <button class="upload-button" onclick="document.getElementById('fileInput').click()">
                        Choose File
                    </button>
                </div>

                <!-- Filters Section -->
                <div class="filters-section">
                    <h3 class="filters-title">Filters</h3>
                    
                    <div class="filter-group">
                        <label class="filter-label">Search</label>
                        <input type="text" class="filter-input" id="searchInput" placeholder="Address, city, or ZIP..." oninput="applyFilters()">
                    </div>

                    <div class="filter-group">
                        <label class="filter-label">Property Type</label>
                        <select class="filter-select" id="propertyTypeFilter" onchange="applyFilters()">
                            <option value="">All Types</option>
                            <option value="Single-Family">Single-Family</option>
                            <option value="Condo">Condo</option>
                            <option value="Multi-Family">Multi-Family</option>
                            <option value="Townhouse">Townhouse</option>
                            <option value="Vacant Land">Vacant Land</option>
                        </select>
                    </div>

                    <div class="filter-group">
                        <label class="filter-label">Price Range</label>
                        <div class="price-range">
                            <input type="number" class="filter-input price-input" id="minPrice" placeholder="Min" oninput="applyFilters()">
                            <span>-</span>
                            <input type="number" class="filter-input price-input" id="maxPrice" placeholder="Max" oninput="applyFilters()">
                        </div>
                    </div>

                    <div class="filter-group">
                        <label class="filter-label">Bedrooms</label>
                        <select class="filter-select" id="bedroomsFilter" onchange="applyFilters()">
                            <option value="">Any</option>
                            <option value="1">1+</option>
                            <option value="2">2+</option>
                            <option value="3">3+</option>
                            <option value="4">4+</option>
                            <option value="5">5+</option>
                        </select>
                    </div>

                    <div class="filter-group">
                        <label class="filter-label">Bathrooms</label>
                        <select class="filter-select" id="bathroomsFilter" onchange="applyFilters()">
                            <option value="">Any</option>
                            <option value="1">1+</option>
                            <option value="2">2+</option>
                            <option value="3">3+</option>
                            <option value="4">4+</option>
                        </select>
                    </div>

                    <div class="filter-group">
                        <label class="filter-label">Min ROI (%)</label>
                        <input type="number" class="filter-input" id="minROI" placeholder="0" oninput="applyFilters()">
                    </div>

                    <div class="filter-group">
                        <label class="filter-label">Min Cash Flow ($)</label>
                        <input type="number" class="filter-input" id="minCashFlow" placeholder="0" oninput="applyFilters()">
                    </div>
                </div>

                <!-- Export Section -->
                <div class="export-section">
                    <button class="btn-secondary" onclick="exportToCSV()">Export CSV</button>
                    <button class="btn-secondary" onclick="exportToPDF()">Export PDF</button>
                </div>
            </aside>

            <!-- Main Content -->
            <main class="main-content">
                <div id="noDataMessage" class="text-center">
                    <h2>Welcome to Real Estate Analyzer</h2>
                    <p>Upload a CSV file to start analyzing properties</p>
                </div>

                <div id="propertiesSection" class="hidden">
                    <div class="properties-header">
                        <div class="properties-count" id="propertiesCount">0 properties</div>
                        <div class="sort-controls">
                            <select class="sort-select" id="sortBy" onchange="sortProperties()">
                                <option value="price">Sort by Price</option>
                                <option value="roi">Sort by ROI</option>
                                <option value="cashflow">Sort by Cash Flow</option>
                                <option value="caprate">Sort by Cap Rate</option>
                                <option value="bedrooms">Sort by Bedrooms</option>
                                <option value="bathrooms">Sort by Bathrooms</option>
                            </select>
                            <div class="view-toggle">
                                <button class="view-button active" onclick="switchView('grid')">Grid</button>
                                <button class="view-button" onclick="switchView('table')">Table</button>
                            </div>
                        </div>
                    </div>

                    <div id="propertiesGrid" class="properties-grid"></div>
                    <div id="propertiesTable" class="hidden"></div>
                </div>

                <div id="loadingSpinner" class="loading hidden">
                    <div class="spinner"></div>
                    <span style="margin-left: 1rem;">Loading properties...</span>
                </div>

                <div id="errorMessage" class="error-message hidden"></div>
            </main>
        </div>
    </div>

    <!-- Comparison Toggle Button -->
    <button class="comparison-toggle hidden" id="comparisonToggle" onclick="showComparison()">
        <span>📊</span>
        <span class="comparison-badge" id="comparisonBadge">0</span>
    </button>

    <!-- Comparison Modal -->
    <div class="modal" id="comparisonModal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Property Comparison</h2>
                <button class="close-btn" onclick="closeComparison()">&times;</button>
            </div>
            <div class="comparison-grid" id="comparisonGrid"></div>
        </div>
    </div>

    <script>
        // Global variables
        let propertiesData = [];
        let filteredProperties = [];
        let comparisonList = [];
        let currentView = 'grid';
        let currentSort = 'price';
        let sortDirection = 'asc';

        // Theme management
        function toggleTheme() {
            const body = document.body;
            const themeToggle = document.querySelector('.theme-toggle');
            
            if (body.getAttribute('data-theme') === 'dark') {
                body.removeAttribute('data-theme');
                themeToggle.textContent = '🌙';
                localStorage.setItem('theme', 'light');
            } else {
                body.setAttribute('data-theme', 'dark');
                themeToggle.textContent = '☀️';
                localStorage.setItem('theme', 'dark');
            }
        }

        // Initialize theme
        function initializeTheme() {
            const savedTheme = localStorage.getItem('theme');
            if (savedTheme === 'dark') {
                document.body.setAttribute('data-theme', 'dark');
                document.querySelector('.theme-toggle').textContent = '☀️';
            }
        }

        // File upload handling
        function handleFileUpload(event) {
            const file = event.target.files[0];
            if (file && file.type === 'text/csv') {
                showLoading();
                parseCSV(file);
            } else {
                showError('Please select a valid CSV file');
            }
        }

        // Drag and drop functionality
        function initializeDragDrop() {
            const uploadSection = document.getElementById('uploadSection');
            
            uploadSection.addEventListener('dragover', (e) => {
                e.preventDefault();
                uploadSection.classList.add('dragover');
            });
            
            uploadSection.addEventListener('dragleave', (e) => {
                e.preventDefault();
                uploadSection.classList.remove('dragover');
            });
            
            uploadSection.addEventListener('drop', (e) => {
                e.preventDefault();
                uploadSection.classList.remove('dragover');
                const files = e.dataTransfer.files;
                if (files.length > 0 && files[0].type === 'text/csv') {
                    showLoading();
                    parseCSV(files[0]);
                } else {
                    showError('Please drop a valid CSV file');
                }
            });
        }

        // CSV parsing
        function parseCSV(file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                try {
                    const csv = e.target.result;
                    const lines = csv.split('\n');
                    const headers = lines[0].split(',').map(h => h.trim().replace(/"/g, ''));
                    
                    propertiesData = [];
                    
                    for (let i = 1; i < lines.length; i++) {
                        if (lines[i].trim()) {
                            const values = parseCSVLine(lines[i]);
                            const property = {};
                            
                            headers.forEach((header, index) => {
                                property[header] = values[index] || '';
                            });
                            
                            // Generate sample data if not present
                            if (!property.price && !property.Price) {
                                property.price = Math.floor(Math.random() * 500000) + 100000;
                            }
                            if (!property.bedrooms && !property.Bedrooms) {
                                property.bedrooms = Math.floor(Math.random() * 5) + 1;
                            }
                            if (!property.bathrooms && !property.Bathrooms) {
                                property.bathrooms = Math.floor(Math.random() * 3) + 1;
                            }
                            if (!property.address && !property.Address) {
                                property.address = `${Math.floor(Math.random() * 9999) + 1} Sample St, Sample City, ST 12345`;
                            }
                            if (!property.propertyType && !property.PropertyType) {
                                const types = ['Single-Family', 'Condo', 'Multi-Family', 'Townhouse'];
                                property.propertyType = types[Math.floor(Math.random() * types.length)];
                            }
                            
                            // Calculate investment metrics
                            property.roi = calculateROI(property);
                            property.cashflow = calculateCashFlow(property);
                            property.caprate = calculateCapRate(property);
                            property.grossYield = calculateGrossYield(property);
                            
                            propertiesData.push(property);
                        }
                    }
                    
                    // If no data was parsed, generate sample data
                    if (propertiesData.length === 0) {
                        generateSampleData();
                    }
                    
                    hideLoading();
                    displayProperties();
                    
                } catch (error) {
                    hideLoading();
                    showError('Error parsing CSV file: ' + error.message);
                }
            };
            reader.readAsText(file);
        }

        //